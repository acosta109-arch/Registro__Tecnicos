﻿
@page "/IndexTecnico"
@rendermode InteractiveServer
@inject TecnicoService tecnicoService
@inject TiposTecnicoService TecnicosS
@inject NavigationManager navigation

<PageTitle>T&eacute;cnicos</PageTitle>
<div class="container">
    <div class="card shadow-lg">
        @*Header*@
        <div class="card-header bg-primary text-white">
            <h3><strong>T&eacute;cnicos</strong></h3>
        </div>
        <div class="row mb-3 align-items-end">
            <div class="col-md-3">
                <label for="Filtro" class="form-label">Filtrar por:</label>
                <select @bind="filtro" class="form-select">
                    <option value="id">TipoID</option>
                    <option value="tecnico">Nombres</option>
                </select>
            </div>
            <div class="col-md-6">
                <label for="ValorFiltro" class="form-label">Búsqueda:</label>
                <div class="input-group">
                    <input @bind="valorFiltro" class="form-control" placeholder="Buscar" />
                    <button @onclick="Buscar" class="btn btn-primary" type="button">
                        <span class="bi bi-search"></span> Buscar
                    </button>
                </div>
            </div>
            <div class="col-md-3 text-end">
                <a href="/CreateTecnico" class="btn btn-success bi bi-plus-circle-fill"> Crear</a>
            </div>
        </div>
        @*Body*@
        <div class="card-body">
            <table class="table table-light">
                <thead>
                    <tr>
                        <th>T&eacute;cnicosId</th>
                        <th>Nombres</th>
                        <th>TipoId</th>
                        <th>Sueldo por hora</th>
                        <th>Detalles</th>
                        <th>Modificar</th>
                        <th>Eliminar</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach(var tecnico in tecnicos)
                    {
                        var tipoTecnico = TecnicosList.FirstOrDefault(tp => tp.TipoId == tecnico.TipoId);

                        <tr>
                            <td>@tecnico.TecnicoId</td>
                            <td>@tecnico.Nombres</td>
                            <td>@(tipoTecnico != null ? tipoTecnico.TipoId : "No encontrado")</td>
                            <td>@tecnico.SueldoHora.ToString("N2")</td>
                            <td class="text-center">
                                <a href="/DetailssTecnico/@tecnico.TecnicoId" class="btn btn-primary bi bi-binoculars-fill">  Detalles</a>
                            </td>
                            <td class="text-center">
                                <a href="/EditTecnico/@tecnico.TecnicoId" class="btn btn-secondary bi bi-pencil-fill">  Modificar</a>
                            </td>

                            <td class="text-center">
                                <a href="/DeleteTecnico/@tecnico.TecnicoId" class="btn btn-danger bi bi-trash-fill">  Eliminar</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>
@code {
    public List<Tecnicos> tecnicos = new List<Tecnicos>();
    public List<Tecnicos> tecnicosFiltrados = new List<Tecnicos>();
    public List<TiposTecnicos> TecnicosList = new List<TiposTecnicos>();
    public string filtro { get; set; } = "id";
    public string valorFiltro { get; set; } = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        tecnicos = await tecnicoService.Listar(t => t.TecnicoId > 0);
        TecnicosList = await TecnicosS.Listar(p => true);
        tecnicosFiltrados = tecnicos;
    }

    private void Buscar()
    {
        if (string.IsNullOrEmpty(valorFiltro))
        {
            tecnicosFiltrados = tecnicos;
        }
        else
        {
            switch (filtro)
            {
                case "id":
                    if (int.TryParse(valorFiltro, out int id))
                    {
                        tecnicosFiltrados = tecnicos.Where(t => t.TecnicoId == id).ToList();
                    }
                    break;
                case "tecnico":
                    tecnicosFiltrados = tecnicos.Where(t => t.Nombres.Contains(valorFiltro, StringComparison.OrdinalIgnoreCase)).ToList();
                    break;
            }
        }
    }
}